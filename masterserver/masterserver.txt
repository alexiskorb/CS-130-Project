-------------------------------------------------------------
-------------------------------------------------------------
masterservers information
-------------------------------------------------------------
map<string, vector<string>>	serverlist;  // [servername] -> ([lobbyname],[lobbyname],[lobbyname])
map<string, vector<string>> openlobby;   // [servername] -> ([ip:port],[ip:port],[ip:port]) of servers without games running
map<string, string>			lobbyport;   // [servername:lobbyname] -> [ip:port]
map<string, vector<string>> lobbyinfo;   // [servername:lobbyname] -> ([maxplayers,currentplayers,etc])
map<string, vector<string>> playerlist;  // [servername:lobbyname] -> [([SteamID, SteamID, SteamID])]
map<string, string>			currentgame; // [SteamID] -> [servername:lobbyname]

-------------------------------------------------------------
-------------------------------------------------------------
Masterserver Interface
----------------------
- Register server
	- stser [servername]
	- masterserver knows there is an available server at ip:port for servername
- Register lobby
	- stlob [servername]:[lobbyname]
	- there is a lobby running on servername:lobbyname now
	- There must be a new, empty server process registered under that servername to host lobby
- unregister lobby (and server)
	- close [servername]:[lobbyname]
	- removes lobby from masterserver's lists
	- removes server from serverlist if no more machines allocated to it
- update lobby playerlist
	- lobup [servername]:[lobbyname]:[player1]:[player2]:...
	- updates masterservers' playerlist for specified lobby
- get list of servers
	- pslis
	- masterserver sends back packet with just'ip:port'
- get list of lobbies on server
	- pllis
	- masterserver sends back packet with '[lobbyname:][lobbyname:]' (there is a : after every lobbyname, even last)
- join lobby
	- pjoin [username]:[servername]:[lobbyname]
- quit lobby

-------------------------------------------------------------
-------------------------------------------------------------
Interactions between masterserver-server-client
-------------------------------------------------------------
------------------
starting a server
------------------
server
	1) send 'stser [server]' to masterserver (for now give a default servername, e.g. US, and make all server processes be under that servername)
	2) run

-----------------
user starts game, starts lobby
-----------------
USWest --> 8001 	--> lobby1,16,2						 --> player1, player2
       --> 8002 	--> lll,0,0							 --> [blank]
Europe --> 4000 	--> lobby1,maxplayers,currentplayers --> player5

client
	1) starts client process
		- send 'pslis' to masterserver
		- receive serverlist as 'USWest:Europe:'
		- turn serverlist into screen output
			 Lobby
			 -----
			 USWest
			 Europe
			 ------
	2) user clicks USWest 
		- send 'pllis [server1]' to masterserver
		- receive lobbylist as 'lobby1:'
			 USWest
			 ------
			 lobby1
			 ------
	3) user clicks NewLobby
		- get USWest from page
		- client send 'stlob lobbyname:USWest' to masterserver
		- masterserver creates lobby from list of open lobbies for servername
		- client send 'pjoin [username]:[servername]:[lobbyname]
		- masterserver sends ip:port of created lobby to client
		- client opens a connection with ip:port
		

------------------------------
user starts game, joins lobby
------------------------------
USWest --> 8001 	--> lobby1,16,2						 --> player1, player2
       --> 8002 	--> [blank]							 --> [blank]
	   --> 8002 	--> lobby2,16,1						 --> user
	 
Europe --> 4000 	--> lobby1,maxplayers,currentplayers --> player5

client
	1) starts client process
		- send 'pslis' to masterserver
		- receive serverlist as 'USWest:Europe:'
		- turn serverlist into screen output
			 Lobby
			 -----
			 USWest
			 Europe
			 ------
	2) user clicks USWest 
		- send 'pllis [server1]' to masterserver
		- receive lobbylist
			 USWest
			 ------
			 lobby1
			 ------
	3) user clicks lobby1
		- get USWest from page
		- client send 'pjoin username:lobby1:USWest' to masterserver
		- masterserver sends ip:port of specified lobby to client
		- client opens a connection with ip:port

		
------------------------------------------------------------------
NOTES from here to the bottom, design may change
			
		
		
------------------------------
user sends invite
------------------------------
USWest --> 8001 	--> lobby1,16,2						 --> player1, player2
       --> 8002 	--> [blank]							 --> [blank]
Europe --> 4000 	--> lobby1,maxplayers,currentplayers --> player5

client (player1)
	1) is in lobby
	2) click invite player3
		- get SteamID of who you want to invite
		- send 'playerinvite [SteamIDofinviter] [SteamIDofinvited]' to masterserver (no ACK necessary?)

------------------------------
user receives invite
------------------------------
USWest --> 8001 	--> lobby1,16,2						 --> player1, player2
       --> 8002 	--> [blank]							 --> [blank]
Europe --> 4000 	--> lobby1,maxplayers,currentplayers --> player5

masterserver
	1) receives 'playerinvite [SteamIDofinviter] [SteamIDofinvited]' from server (previous case)
	2) sends 'playerinvite [SteamIDofinviter] [servername] [lobbyname]' to client
client
	1) Is not in lobby
	2) receives 'playerinvite [SteamIDofinviter] [servername] [lobbyname]'
	3) Prompted with [accept/decline]
		- accept:	
			- send 'playerjoin [SteamIDofinvited]:[servername]:[lobbyname]' to masterserver
				- if possible,
					- receive 'playerjoin [SteamIDofinvited]:[ipaddress]:[port]'
					- client opens connection to ipaddress:port
				- if not,
					- receive 'playerjoinfail'
	
-------------------------------------------------------------
-------------------------------------------------------------
How lobby creation in Unity works, and what intermediate steps to take
-------------------------------------------------------------
1)Click Create Lobby
2)Client sends 'createlobby playername servername lobbyname' to lobby
3)lobby sends 'playerjoinlobby [playerlist] ip:port'(just one player for creating a lobby) to client
    ^
	|
	|
	master server receives 'createlobby playername servername lobbyname'
	master server finds ip:port of empty lobby under servername
	master server sends lobby 'createlobby playername lobbyname'
	lobby acks
	master server sends client 'playerjoinlobby [playerlist] ip:port'
	client acks
	
Join 

]]